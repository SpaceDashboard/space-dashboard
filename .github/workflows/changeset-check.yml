name: Changeset Check
permissions:
  contents: read

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  check-changeset:
    name: Check for Changeset
    # Skip if this is a release PR (from release-branch/main branch)
    if: github.head_ref != 'release-branch/main'
    runs-on: ubuntu-latest
    steps:
      - name: Clone Repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # 4.2.2
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # 4.4.0
        with:
          node-version: lts/Iron

      - name: Get latest yarn
        run: |
          corepack enable
          yarn set version berry

      - name: Check changeset status
        run: |
          git fetch origin main:main

          # Run changeset status and capture output
          if ! JSON_OUTPUT=$(yarn dlx -p @changesets/cli changeset status --output=json --since=main 2>&1); then
            echo "::error::Changeset command failed: $JSON_OUTPUT"
            exit 1
          fi

          # Check if JSON_OUTPUT is empty or not valid JSON
          if ! echo "$JSON_OUTPUT" | jq empty 2>/dev/null; then
            echo "::error::Invalid JSON output from changeset status. Output was: $JSON_OUTPUT"
            exit 1
          fi

          # Safely get release count with a default of 0 if releases field doesn't exist
          RELEASE_COUNT=$(echo "$JSON_OUTPUT" | jq '.releases | length // 0' 2>/dev/null)

          if [ "$RELEASE_COUNT" -eq 0 ]; then
            echo "::error::No changesets found. Please add a changeset when making changes."
            echo "To create a changeset, run: yarn changeset"
            exit 1
          else
            echo "âœ… Found $RELEASE_COUNT changeset(s)."
          fi
