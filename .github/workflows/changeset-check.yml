name: Changeset Check
permissions:
  contents: read

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  check-changeset:
    name: Check for Changeset
    # Skip if this is a release PR (from release-branch/main branch)
    if: github.head_ref != 'release-branch/main'
    runs-on: ubuntu-latest
    steps:
      - name: Clone Repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # 4.2.2
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # 4.4.0
        with:
          node-version: lts/Iron

      - name: Get latest yarn
        run: |
          corepack enable
          yarn set version berry

      - name: Install dependencies
        run: yarn install --immutable

      - name: Check changeset status
        run: |
          git fetch origin main:refs/remotes/origin/main
          STATUS_OUTPUT=$(yarn dlx -p @changesets/cli changeset status --since=origin/main)
          echo "$STATUS_OUTPUT"

          # Check if changesets are present
          if echo "$STATUS_OUTPUT" | grep -q "NO packages to be bumped at patch" && \
             echo "$STATUS_OUTPUT" | grep -q "NO packages to be bumped at minor" && \
             echo "$STATUS_OUTPUT" | grep -q "NO packages to be bumped at major"; then
            echo "❌ No changesets found for changes that require version bumps. Please add a changeset for your changes."
            exit 1
          else
            echo "✅ Changeset(s) found for version changes."
          fi

          # # Debug: Show current branch and changes
          # echo "Current branch: $(git branch --show-current)"
          # echo "Current commit: $(git rev-parse HEAD)"

          # # Fetch the main branch
          # echo "Fetching main branch..."
          # git fetch origin main:refs/remotes/origin/main

          # # Show available branches
          # echo "Available branches:"
          # git branch -a

          # # Check if we have a main branch reference
          # if ! git rev-parse --verify refs/remotes/origin/main >/dev/null 2>&1; then
          #   echo "❌ Error: Could not find main branch reference"
          #   echo "This might be the first commit to the repository."
          #   echo "No changeset check needed for initial commit."
          #   exit 0
          # fi

          # # Show changes in this PR
          # echo "Changes in this PR:"
          # git diff --name-status origin/main...HEAD || true

          # # Check for changeset files
          # echo "Changeset files:"
          # find .changeset -name '*.md' -not -name 'README.md' | xargs -I {} sh -c 'echo "- {}:"; cat {}; echo "\n"' || true

          # # Check changeset status with more verbose output
          # echo "Checking changeset status..."
          # STATUS_OUTPUT=$(yarn dlx -p @changesets/cli changeset status --since=origin/main --verbose)

          # echo "$STATUS_OUTPUT"

          # # Check for any changes that need version bumps
          # if echo "$STATUS_OUTPUT" | grep -q "No changed packages"; then
          #   echo "ℹ️  No package changes detected that require version bumps."
          #   exit 0
          # fi

          # # Check if changesets are present
          # if echo "$STATUS_OUTPUT" | grep -q "NO packages to be bumped at patch" && \
          #    echo "$STATUS_OUTPUT" | grep -q "NO packages to be bumped at minor" && \
          #    echo "$STATUS_OUTPUT" | grep -q "NO packages to be bumped at major"; then
          #   echo "❌ No changesets found for changes that require version bumps. Please add a changeset for your changes."
          #   exit 1
          # else
          #   echo "✅ Changeset(s) found for version changes."
          # fi
