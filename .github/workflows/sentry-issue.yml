name: Create Issue from Sentry

on:
  workflow_dispatch:
    inputs:
      sentry_id:
        description: 'Sentry Issue ID (e.g. 6390929863)'
        required: true

jobs:
  create_issue:
    name: Create Issue from Sentry Issue
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Fetch Sentry Issue
        id: sentry
        run: |
          SENTRY_API=https://sentry.io/api/0
          ISSUE_ID=${{ github.event.inputs.sentry_id }}
          AUTH_HEADER="Authorization: Bearer $SENTRY_AUTH_TOKEN"

          # Fetch Sentry Issue JSON
          ISSUE_DATA=$(curl -s -H "$AUTH_HEADER" "$SENTRY_API/issues/$ISSUE_ID/")

          # Extract and clean fields
          TITLE=$(echo "$ISSUE_DATA" | jq -r '.title // "No Title"' | sed 's/"/\\"/g')
          URL=$(echo "$ISSUE_DATA" | jq -r '.permalink // "No URL"')
          # STACKTRACE=$(echo "$ISSUE_DATA" | jq -r '.metadata.value // ""' | sed 's/`/\\`/g; s/^ *//; s/ *$//')
          STACKTRACE=$(echo "$ISSUE_DATA" | jq -r '.metadata.value // ""')

          # Escape triple backticks in STACKTRACE
          # STACKTRACE_ESCAPED=$(printf "%s" "$STACKTRACE" | sed 's/```/\\`\\`\\`/g')

          # Build body with clean formatting
          DESCRIPTION=$(printf "**Sentry Issue:** [%s](%s)\n\n" "$TITLE" "$URL")
          if [ -n "$STACKTRACE" ]; then
            DESCRIPTION+=$(printf "**Stacktrace:**\n\n\`\`\`\n%s\n\`\`\`\n" "$STACKTRACE")
          fi

          # Remove excess newlines
          DESCRIPTION=$(echo "$DESCRIPTION" | sed -E ':a;N;$!ba;s/\n{2,}/\n\n/g')

          # Escape variables for GitHub Actions
          ESCAPED_TITLE=$(echo "$TITLE" | sed 's/%/%25/g; s/\n/%0A/g; s/\r/%0D/g')
          ESCAPED_DESCRIPTION=$(echo "$DESCRIPTION" | sed 's/%/%25/g; s/\n/%0A/g; s/\r/%0D/g')

          # Save to environment for the next step
          echo "TITLE=$ESCAPED_TITLE" >> $GITHUB_ENV
          echo "DESCRIPTION=$ESCAPED_DESCRIPTION" >> $GITHUB_ENV
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN_WRITE }}

      - name: Create GitHub Issue
        run: |
          # Write the DESCRIPTION to a temporary file
          echo "$DESCRIPTION" > issue_body.md

          # Create the GitHub issue using the temporary file
          gh issue create \
            --title "$TITLE" \
            --body-file issue_body.md \
            --label "bug" \
            --assignee "AstroCaleb"
        env:
          GH_TOKEN: ${{ secrets.GH_PAT }}
