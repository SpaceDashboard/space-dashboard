name: Create Issue from Sentry

on:
  workflow_dispatch:
    inputs:
      sentry_id:
        description: 'Sentry Issue ID (e.g. 6390929863)'
        required: true

jobs:
  create_issue:
    name: Create Issue from Sentry Issue
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Fetch Sentry Issue
        id: sentry
        run: |
          SENTRY_API=https://sentry.io/api/0
          ISSUE_ID=${{ github.event.inputs.sentry_id }}
          AUTH_HEADER="Authorization: Bearer $SENTRY_AUTH_TOKEN"

          # Fetch Sentry Issue JSON
          ISSUE_DATA=$(curl -s -H "$AUTH_HEADER" "$SENTRY_API/issues/$ISSUE_ID/")

          # Extract and clean fields
          TITLE=$(echo "$ISSUE_DATA" | jq -r '.title // "No Title"' | sed 's/(/\\(/g; s/)/\\)/g')
          URL=$(echo "$ISSUE_DATA" | jq -r '.permalink // "No URL"')
          STACKTRACE=$(echo "$ISSUE_DATA" | jq -r '.metadata.value // ""')

          # Clean up stacktrace for Markdown
          if [ -n "$STACKTRACE" ]; then
            STACKTRACE=$(echo "$STACKTRACE" | sed 's/`/\\`/g; s/^ *//; s/ *$//')
          fi

          # Build body with clean formatting
          # DESCRIPTION="### Sentry Issue: [$TITLE]($URL)\n\n"
          # if [ -n "$STACKTRACE" ]; then
          #   DESCRIPTION+="**Stacktrace:**\n\n\`\`\`\n$STACKTRACE\n\`\`\`\n"
          # fi

          # Remove excess newlines
          # DESCRIPTION=$(echo "$DESCRIPTION" | sed -E ':a;N;$!ba;s/\n{2,}/\n\n/g')

          # Save to environment for the next step
          # echo "TITLE=$TITLE" >> $GITHUB_ENV
          # echo "DESCRIPTION=$DESCRIPTION" >> $GITHUB_ENV

          gh issue create \
            --title "$TITLE" \
            --body $"### Sentry Issue: [$TITLE]($URL)\n\n**Stacktrace:**\n\n\`\`\`\n$STACKTRACE\n\`\`\`\n" \
            --label "bug" \
            --assignee "AstroCaleb"
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN_WRITE }}

      # - name: Create GitHub Issue via gh CLI
      #   run: |
      #     gh issue create \
      #       --title "$TITLE" \
      #       --body $"$DESCRIPTION" \
      #       --label "bug" \
      #       --assignee "AstroCaleb"
      #   env:
      #     GH_TOKEN: ${{ secrets.GH_PAT }}
